{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-07-19T16:06:55.000Z] [rndquu]:\nRight now the permit redeem flow is the following:\r\n1. Contributor solves an issue\r\n2. `conversation-rewards` plugin generates a permit, saves it to a DB and displays it in github comments\r\n3. Contributor redeems permit at `pay.ubq.fi`\r\n\r\n[This](https://github.com/ubiquity/pay.ubq.fi/pull/226) PR introduces claiming rewards to gift cards.\r\n\r\nThe updated flow of the permit redeem should be following:\r\n1. Contributor solves an issue\r\n2. Permit reward amount is accumulated in a DB\r\n3. Contributor opens `pay.ubq.fi`, generates either an on-chain single permit (possibly for multiple solved issues) either redeems to a gift card\r\n\r\nSo as a part of this issue we should accumulate contributor rewards in a DB similar to how `0x4007` initially implemented it with the `debits, cerdits, settlements` tables.\r\n\r\n<img width=\"1512\" alt=\"Screenshot 2024-07-19 at 19 04 18\" src=\"https://github.com/user-attachments/assets/cb47da1e-e3ce-4788-b936-9ef50c28fdc9\">\r\n\r\nWhen this issue of accumulated rewards is ready we can just disable permit generation (via the plugin's `permitGeneration.enabled` option) and let contributors redeem only at `pay.ubq.fi`.\r\n\r\nP.S. Permit fees should be [enabled](https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/142#discussion_r1788982707)\n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-conversation-rewards\nIssue Number: #64\nTime to Complete: Not completed\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Day"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-11-25T08:31:56.000Z] [gentlementlegen]:\n              Reliably depends mostly on GitHub API I suppose, sometimes I must say it looks weird because the \"diff\" is just the comment you posted not a diff formatted content. Making a separate spec to explore this.\r\n\r\n_Originally posted by @gentlementlegen in https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/188#discussion_r1856110897_\r\n            \r\n\r\nWe should try to use diff to understand the edits on bodies and comments and avoid crediting the bot for its changes, only the human made edits.\r\n\r\nWhat should be done:\r\n- diff the whole history on the bodies of issues to remove the bot content from evaluation\r\n- likewise for comments\r\n- likewise for review comments\r\n\r\nA library that might help: https://www.npmjs.com/package/diff\n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-conversation-rewards\nIssue Number: #201\nTime to Complete: Not completed\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <4 Hours"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-11-19T16:56:22.000Z] [rndquu]:\nRight now all core plugins have a `manifest.json` file ([example](https://github.com/ubiquity-os-marketplace/command-start-stop/blob/ee4f7c698f0e221381df7c73f56457e1ca4d22ea/manifest.json)) describing plugin's:\r\n- name\r\n- description\r\n- listeners\r\n- command examples\r\n- configuration parameters\r\n\r\nThe issue is that when plugin configuration is displayed in https://github.com/ubiquity-os/ubiquity-os-plugin-installer there're no any configuration parameter descriptions so it's really hard for a partner to find out what parameters are meant to be used for:\r\n<img width=\"1511\" alt=\"Screenshot 2024-11-19 at 19 14 11\" src=\"https://github.com/user-attachments/assets/b2fe50c2-c740-49f8-bec5-2afa1af2f695\">\r\n\r\nWhat should be done for all of the core plugins in https://github.com/ubiquity-os-marketplace:\r\n1. Make sure the readme file is relevant (i.e. has a relevant config example and configuration parameter descriptions)\r\n2. Make sure there's a `name` property in the `manifest.json` (some of the core plugins miss it)\r\n3. Make sure there's a `description` property in the `manifest.json`\r\n4. Add descriptions of plugin configuration parameters in the `plugin-input.ts` file (for example [this](https://github.com/Meniole/command-query-user/blob/042533ebbbfebaf5f5754b1d4a2fcf1d8afd94ad/src/types/plugin-input.ts#L7) code generates [this](https://github.com/Meniole/command-query-user/blob/ecb3c906d0e21b1557b23a8465fb2760b3f87abf/manifest.json#L16) manifest). Simply put we should add the `description` field for all of the plugin parameters in the `plugin-input.ts` file. Description should include general info and possible parameter options.\r\n\r\nNotice that in the `manifest.json` file the `configuration` schema is created dynamically:\r\n1. [update-configuration.yml](https://github.com/ubiquity-os-marketplace/command-start-stop/blob/ee4f7c698f0e221381df7c73f56457e1ca4d22ea/.github/workflows/update-configuration.yml) workflow runs \r\n2. Configuration schema is fetched from [plugin-input.ts](https://github.com/ubiquity-os-marketplace/command-start-stop/blob/ee4f7c698f0e221381df7c73f56457e1ca4d22ea/src/types/plugin-input.ts)\r\n3. [manifest.json](https://github.com/ubiquity-os-marketplace/command-start-stop/blob/ee4f7c698f0e221381df7c73f56457e1ca4d22ea/manifest.json) is updated ([example commit](https://github.com/ubiquity-os-marketplace/command-start-stop/commit/56232c8c67d198cc46cf61c9b3fd0b90cce57df7))\r\n\r\nThen we'll display all configuration parameter descriptions in https://github.com/ubiquity-os/ubiquity-os-plugin-installer on creating/editing a config.\r\n\r\nUpdate: parameter description PRs:\r\n- https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/49\r\n- https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/56\r\n- https://github.com/ubiquity-os-marketplace/command-start-stop/pull/94\r\n- https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/52\r\n- https://github.com/ubiquity-os-marketplace/command-wallet/pull/24\r\n- https://github.com/ubiquity-os-marketplace/command-query/pull/25\r\n- https://github.com/ubiquity-os-marketplace/command-ask/pull/41\r\n- https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/202\r\n- https://github.com/ubiquity-os-marketplace/daemon-merging/pull/30\r\n\r\n\n\n### Issue Details\nRepository: ubiquity-os/ubiquity-os-plugin-installer\nIssue Number: #24\nTime to Complete: 2215 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <4 Hours"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-09-21T10:45:14.000Z] [0x4007]:\n1. Follow up should be on pull request so that they don't reply under issue and get paid for it. \r\n2. If there isn't a pull request open in time for the warning, automatically disqualify them (they should open a draft pull as soon as they self assign)\r\n   - Must be configurable since some tasks are not coding related. \r\n   - If pull isn't required then follow up under issue as we do now. \r\n3. \"activity which should be considered is only the one from the assignees themselves. I believe currently any activity from anyone is considered in the events.\"\n\n### Issue Details\nRepository: ubiquity-os-marketplace/daemon-disqualifier\nIssue Number: #23\nTime to Complete: 791 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <4 Hours"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-06-24T09:46:18.000Z] [0x4007]:\nLeft some remarks on https://github.com/ubiquity/ubiquibot-config/pull/18/files\n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-conversation-rewards\nIssue Number: #46\nTime to Complete: 761 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <2 Hours"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2025-01-15T12:47:40.000Z] [gentlementlegen]:\nIt would be a small detail but whenever I use this plugin, I think that nothing happens because no comment gets posted right away but rather the whole execution has to finish before any feedback is sent to the user. A simple  \"ubiquity-os is thinking...\" message at the beginning would show the user the command worked and that something is going on, which I believe could greatly improve the user experience.\n\n### Issue Details\nRepository: ubiquity-os-marketplace/command-ask\nIssue Number: #52\nTime to Complete: 502 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <15 Minutes"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-10-16T04:55:38.000Z] [0x4007]:\nOccasionally there are instances where trusted contributors:\n1. File the spec\n2. Price the issue (they add both time and priority)\n3. Self assign\n4. Self merge. \nIf theres no other collaborator involved in any part of this process, we should refuse to generate the reward until somebody else steps in to reopen and close at least. \nUnfortunately after the pull is merged we cant leave a review state other than commented, and it doesnt make sense to change the labels or spec either. \n---\nOnly admins and billing managers should have this capability. I definitely need it for demo purposes when pitching.\n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-conversation-rewards\nIssue Number: #160\nTime to Complete: 1221 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Hour"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-10-16T06:00:12.000Z] [gentlementlegen]:\n@0x4007 Not sure to understand your question. But now that I think of it, maybe the plugin should be in charge to watch its own configuration (dev should check for .dev.yml only and not both), what do you think?\r\n\r\n_Originally posted by @gentlementlegen in https://github.com/ubiquity-os/ubiquity-os-kernel/issues/143#issuecomment-2408443603_\n\n### Issue Details\nRepository: ubiquity-os/ubiquity-os-kernel\nIssue Number: #147\nTime to Complete: 141 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Hour"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-05-14T04:54:32.000Z] [gentlementlegen]:\nWe should have the capability of running the plugins inside Workers, which would be very useful for short-lived tasks that require responsiveness like commands for example. Currently, we only support Actions, which works fine but takes ~1 minute response time, which is not user friendly when it comes to using commands with the bot.\r\n\r\nIn the configuration, for each plugin it is possible to specify a [`type`](https://github.com/ubiquity/ubiquibot-kernel/blob/c8da3c0e07eb2735b0e7d63d5f2997a138fd2135/src/github/types/plugin-configuration.ts#L37) that should determine what kind of plugin it is. A new value like `worker` should be added, and should make the plugin run on a worker instead of calling a GitHub Action.\n\n### Issue Details\nRepository: ubiquity-os/ubiquity-os-kernel\nIssue Number: #39\nTime to Complete: 478 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Day"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-10-15T06:42:21.000Z] [shiv810]:\n@sshivaditya2019 it is \"editing\" the spec even without posting relevance. This should not occur.\r\n\r\n_Originally posted by @0x4007 in https://github.com/ubiquity-os-marketplace/daemon-pricing/issues/43#issuecomment-2411241509_\n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-vector-embeddings\nIssue Number: #34\nTime to Complete: 9 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <15 Minutes"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-10-16T01:01:02.000Z] [shiv810]:\nSupabase migrations are not working because the `DROP FUNCTION` command is ambiguous; there are other functions with the same name or overloaded versions that exist, that should not happen.\n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-vector-embeddings\nIssue Number: #36\nTime to Complete: 3 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <15 Minutes"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-06-18T21:54:31.000Z] [0x4007]:\n> @0x4007 Can be done just that the current design only allows for one command per `uses` configuration element, c.f. https://github.com/ubiquity/ubiquibot-kernel/blob/570b68e18639e9c38a90872cfb8cbfbbdf661481/src/github/types/plugin-configuration.ts#L60\r\nWe could consider supporting an array of `command` instead of just one element.\r\n\r\n_Originally posted by @gentlementlegen in https://github.com/Meniole/ubiquibot-kernel/issues/2#issuecomment-2176990975_\r\n            \n\n### Issue Details\nRepository: ubiquity-os/ubiquity-os-kernel\nIssue Number: #58\nTime to Complete: 676 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Day"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-10-28T00:46:31.000Z] [gentlementlegen]:\n              > ```diff\r\n> ! Failed to run comment evaluation. Error: 400 This model's maximum context length is 128000 tokens. However, your messages resulted in 148540 tokens. Please reduce the length of the messages.\r\n> ```\r\n> <!--\r\n> https://github.com/ubiquity-os-marketplace/text-conversation-rewards/actions/runs/11463496789\r\n> {\r\n>   \"status\": 400,\r\n>   \"headers\": {\r\n>     \"access-control-expose-headers\": \"X-Request-ID\",\r\n>     \"alt-svc\": \"h3=\\\":443\\\"; ma=86400\",\r\n>     \"cf-cache-status\": \"DYNAMIC\",\r\n>     \"cf-ray\": \"8d6a8635dd992009-IAD\",\r\n>     \"connection\": \"keep-alive\",\r\n>     \"content-length\": \"284\",\r\n>     \"content-type\": \"application/json\",\r\n>     \"date\": \"Tue, 22 Oct 2024 15:29:41 GMT\",\r\n>     \"openai-organization\": \"ubiquity-dao-8veapj\",\r\n>     \"openai-processing-ms\": \"375\",\r\n>     \"openai-version\": \"2020-10-01\",\r\n>     \"server\": \"cloudflare\",\r\n>     \"set-cookie\": \"__cf_bm=urRioyrKlQBCiRkxcgeZKjDpvmvjEQsjfq1o9zASCxs-1729610981-1.0.1.1-u3eEr.AKdcx2EGJuW2nauw6LA5zK0ZDXyOKJiCI01E_pfZOpnzWIJoxgLq_OlO8BDT_WFfSD_jFjjW6Fnmx_Mw; path=/; expires=Tue, 22-Oct-24 15:59:41 GMT; domain=.api.openai.com; HttpOnly; Secure; SameSite=None, _cfuvid=qIG5Ao6fOQ9MAWT6hlX2fjC8G.yTYmXl4vzXjH7Qqsg-1729610981415-0.0.1.1-604800000; path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None\",\r\n>     \"strict-transport-security\": \"max-age=31536000; includeSubDomains; preload\",\r\n>     \"x-content-type-options\": \"nosniff\",\r\n>     \"x-ratelimit-limit-requests\": \"5000\",\r\n>     \"x-ratelimit-limit-tokens\": \"450000\",\r\n>     \"x-ratelimit-remaining-requests\": \"4999\",\r\n>     \"x-ratelimit-remaining-tokens\": \"83951\",\r\n>     \"x-ratelimit-reset-requests\": \"12ms\",\r\n>     \"x-ratelimit-reset-tokens\": \"48.806s\",\r\n>     \"x-request-id\": \"req_bb581eb70b2276ea9a9c563b12f6343b\"\r\n>   },\r\n>   \"request_id\": \"req_bb581eb70b2276ea9a9c563b12f6343b\",\r\n>   \"error\": {\r\n>     \"message\": \"This model's maximum context length is 128000 tokens. However, your messages resulted in 148540 tokens. Please reduce the length of the messages.\",\r\n>     \"type\": \"invalid_request_error\",\r\n>     \"param\": \"messages\",\r\n>     \"code\": \"context_length_exceeded\"\r\n>   },\r\n>   \"code\": \"context_length_exceeded\",\r\n>   \"param\": \"messages\",\r\n>   \"type\": \"invalid_request_error\",\r\n>   \"caller\": \"/home/runner/work/text-conversation-rewards/text-conversation-rewards/dist/index.js:291:6136492\"\r\n> }\r\n> -->\r\n\r\n@gentlementlegen perhaps we have too much overhead with each pull? And by that I mean headers and such not the main content? Because I don't imagine that each pull actually has that much \"body\" content. This easily can be optimized as I see some have barely any comments.\r\n\r\n_Originally posted by @0x4007 in https://github.com/ubiquity-os/ubiquity-os-kernel/issues/80#issuecomment-2439728916_\r\n            \n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-conversation-rewards\nIssue Number: #174\nTime to Complete: 2039 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <2 Hours"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2025-01-11T08:58:29.000Z] [0x4007]:\nFor a more natural working style for non-software developer contributors, read the contents of posted Google Drive links. We can easily download the contents in plaintext using the Google Drive GUI, I'm sure there is an API for that. \r\n\r\nEnable retrieval support for: \r\n- Docs\r\n- Sheets \r\n- Slides. \r\n\r\nConsider using [Anthropic's Model Context Protocol](https://modelcontextprotocol.io/introduction) if it is applicable. \r\n\r\nReference: https://github.com/ubiquity/business-development/issues/108#issuecomment-2585162798\n\n### Issue Details\nRepository: ubiquity-os-marketplace/command-ask\nIssue Number: #51\nTime to Complete: Not completed\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <4 Hours"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-07-26T03:10:21.000Z] [0x4007]:\nPerhaps its more convenient for a Telegram bot to message the rewards. This module can come with a registration command[^1^] and then direct message the reward link.  \r\n\r\nThis could be more convenient to some users until we finish the database side and collect all the unclaimed rewards for the contributors. \r\n\r\n[^1^]: /telegram pavlovcik\r\n\n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-conversation-rewards\nIssue Number: #73\nTime to Complete: 2392 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <4 Hours"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-10-31T23:48:23.000Z] [0x4007]:\nIt works in normal comments, but not in pull request review, which is a separate class of comments\n\n> @UbiquityOS explain the strategy I mentioned \n\n_Originally posted by @0x4007 in https://github.com/ubiquity-os-marketplace/command-ask/pull/28#discussion_r1825277719_\n\n### Issue Details\nRepository: ubiquity-os-marketplace/command-ask\nIssue Number: #29\nTime to Complete: Not completed\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <15 Minutes"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2025-02-04T21:41:18.000Z] [shiv810]:\n              > I couldn't find any details about this pull request in the current context. Please provide more information or check the pull request description for a summary of the changes.\n\n@shiv810\n\n```html\n<!-- Ubiquity - ubiquity-os-llm-response - processCommentCallback - undefined\n{\n  \"metadata\": {\n    \"groundTruths\": [\n      \"The repository primarily uses CSS and TypeScript.\",\n      \"It interacts with Ethereum via ethers and Uniswap SDK.\",\n      \"It integrates with GitHub using Octokit libraries.\",\n      \"The project utilizes Supabase as its backend service.\",\n      \"Environment variables are managed with dotenv.\",\n      \"The project is built using esbuild.\",\n      \"Code quality is maintained with eslint and Prettier.\",\n      \"Version control hooks are managed by husky and commitlint.\",\n      \"Testing is performed using Cypress.\",\n      \"YAML is used for configuration files.\"\n    ],\n    \"tokenUsage\": {\n      \"input\": 560,\n      \"output\": 1067,\n      \"total\": 1627\n    }\n  },\n  \"caller\": \"processCommentCallback\"\n}\n-->\n```\n\n_Originally posted by @0x4007 in https://github.com/ubiquity/onboard.ubq.fi/issues/33#issuecomment-2634801162_\n            \n\n### Issue Details\nRepository: ubiquity-os-marketplace/command-ask\nIssue Number: #60\nTime to Complete: 8 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <15 Minutes"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-12-12T20:04:31.000Z] [shiv810]:\nThe issue matchmaking (issue contributor recommendation) functionality should work across multiple orgs/repos and not be restricted within single repo.\n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-vector-embeddings\nIssue Number: #60\nTime to Complete: 161 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <2 Hours"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-02-17T14:30:10.000Z] [0x4007]:\nThis should include an updated schema for the UNIX style pipe syntax, as well as the kernel code to support this by pinging remote plugins and then understanding to pipe their output until the end of the chain, then return to kernel. \r\n\r\n> I think it makes more sense to focus on designing a `.yml` config schema that is compatible with \"unix style piping\" so that the kernel knows to pipe output from one plugin to the next just from the `ubiquibot-config.yml` information.\r\n\r\n_Originally posted by @pavlovcik in https://github.com/ubiquity/ubiquibot-kernel/issues/3#issuecomment-1950223872_\r\n            \n\n### Issue Details\nRepository: ubiquity-os/ubiquity-os-kernel\nIssue Number: #24\nTime to Complete: 178 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Week"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-01-16T23:19:18.000Z] [0x4007]:\nhttps://github.com/ubiquity/ubiquibot/issues/909#issuecomment-1894620433\r\n\r\nLooks like the qualitative analysis of comments is shaky. On crash, the bot should reply back to the original conversation ([here, where it says evaluating results, please wait](https://github.com/ubiquity/ubiquibot/issues/909#issuecomment-1894620433)) with an error message to let us know that it failed. \r\n\r\n###### Source\r\n\r\nhttps://github.com/ubiquity/ubiquibot/issues/909#issuecomment-1894626568\n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-conversation-rewards\nIssue Number: #22\nTime to Complete: 4371 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Hour"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2025-01-10T06:40:19.000Z] [0x4007]:\nThis plugin may require vector embeddings of the issue specifications, but it seems to be a responsibility under this plugin for dealing with the labels so I'm filing here.\n\nThe system should learn from issue specifications and their labels to predict priority levels and time estimates for newly posted tasks. \n\nWe should be able to configure to automatically assign time, priority, and/or price labels. \n\nFor example if \n```yml\nautoSetTime: true\nautoSetPriority: true\nautoSetPrice: false\n```\n\nThen this will allow the team to approve of task pricing before allowing people to self assign. \n\n### Precision\n\nThis could be a second generation of this capability. It could be especially useful when computing against larger tasks in the weeks or months range.  \n\nIt would be great to generate custom time labels for added precision. For example, if historical task A took an hour and task B took two hours, and a new task falls in the middle in terms of similarity, it could assign a label of 1.5 hours. We technically could do the same for priority levels, and get precise pricing generated. \n\nI would imagine that the more data the system has the more accurate these labels will be.\n\n### Issue Details\nRepository: ubiquity-os-marketplace/daemon-pricing\nIssue Number: #71\nTime to Complete: Not completed\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Day"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2025-02-12T03:39:04.000Z] [0x4007]:\n> Hey guys @shiv810 @gentlementlegen we don't have any information displayed on this in the scoring summary? [^01^] That should have been a requirement! [^02^] How do we know if it's even working now?\n\n> It doesn't appear so, it could be added within the `formatting` column probably. [^03^] \n\n_Originally posted by @gentlementlegen in https://github.com/ubiquity-os-marketplace/text-conversation-rewards/issues/230#issuecomment-2652581744_ [^05^] [^04^]    \n\n\n\n\n\n\n\n\n[^01^]: ⚠ 76% possible duplicate - [Rename variables to match the configuration and introduce `elementScore` concept](https://www.github.com/ubiquity-os-marketplace/text-conversation-rewards/issues/92#92)\n\n[^02^]: ⚠ 76% possible duplicate - [Apply relevance to the whole formatting result](https://www.github.com/ubiquity-os-marketplace/text-conversation-rewards/issues/213#213)\n\n[^03^]: ⚠ 77% possible duplicate - [Make this work - version one](https://www.github.com/ubiquity-os-marketplace/text-conversation-rewards/issues/2#2)\n\n[^04^]: ⚠ 77% possible duplicate - [`-`&`0`](https://www.github.com/ubiquity-os-marketplace/text-conversation-rewards/issues/113#113)\n\n[^05^]: ⚠ 79% possible duplicate - [Flesch-Kincaid Clarity Module](https://www.github.com/ubiquity-os-marketplace/text-conversation-rewards/issues/230#230)\n\n\n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-conversation-rewards\nIssue Number: #269\nTime to Complete: Not completed\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Hour"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-09-08T11:44:46.000Z] [0x4007]:\nWhen visiting a plugin URL from web browser, we should be able to have a UI that allows us to install the plugin and see/configure the default values. \r\n\r\nThis will require GitHub authentication to commit on behalf of the user and make changes to one's ubiquibot-config file \n\n### Issue Details\nRepository: ubiquity-os/ubiquity-os-kernel\nIssue Number: #107\nTime to Complete: 176 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Week"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-07-27T01:05:12.000Z] [gentlementlegen]:\nIn the bot v1, when the configuration is changed, annotations are added to the configuration file if any error is encountered within the configuration. It would be really nice to have for v2 as it is a common scenario to have an invalid configuration and have no feedback about it because the error would only be visible within the worker logs.\r\n\r\nThe main challenge is that only plugins are aware of their configuration shape, so probably the kernel should call every plugin to check their validity, which would require an endpoint or some access to the configuration validators. At the same time, the `manifest.json` validity could be checked, relating to https://github.com/ubiquity/ubiquibot-kernel/issues/78.\r\n\r\nSince this might imply quite a few network requests, we can also consider having this functionality as a separate Worker using [service binding](https://developers.cloudflare.com/workers/runtime-apis/bindings/service-bindings/).\n\n### Issue Details\nRepository: ubiquity-os/ubiquity-os-kernel\nIssue Number: #80\nTime to Complete: 3487 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Week"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-12-12T12:17:39.000Z] [0x4007]:\n- remove all code related to `/allow` command \n- always undo `priority` and `price` class label changes (add or remove) from collaborators EXCEPT if they are an admin/billing manager. \n- perhaps label classes should be configurable, with ours being the default, so that projects can design their own label systems. \n\nThis is a capability we need for some new hires, also this should really simplify this codebase. \n\nFull context: https://github.com/ubiquity-os-marketplace/command-start-stop/issues/104#issuecomment-2538648933\n\n### Issue Details\nRepository: ubiquity-os-marketplace/daemon-pricing\nIssue Number: #62\nTime to Complete: 579 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <2 Hours"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-08-27T04:17:08.000Z] [gentlementlegen]:\n              @0x4007 This is also because of the use of a single token [here](https://github.com/ubiquibot/conversation-rewards/actions/runs/10553527862/job/29233964131#step:7:88). I'll have a look today, it seems to be the only case where it breaks, all the other ones are calculated properly with the dummy response.\r\n\r\n_Originally posted by @gentlementlegen in https://github.com/ubiquibot/conversation-rewards/issues/62#issuecomment-2309288788_\r\n            \r\n\r\nSometimes, OpenAI gives back an empty response that breaks the process and comment evaluation. This should not happen.\n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-conversation-rewards\nIssue Number: #103\nTime to Complete: 23 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <2 Hours"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-12-04T09:11:35.000Z] [0x4007]:\nWe need to populate our matchmaking database. We \"register\" users in our system when they \"Sign in with GitHub\" on https://devpool.directory/\r\n\r\nI suppose with GraphQL it may be simple to check every issue that is closed as complete with these assignees. \r\n\r\n- We need to capture all of the metadata to make it easier to work with later.\r\n- We need to be able to determine the location of the issue, which means organization and repository. We should capture both the names as well as the IDs, in case of renames. \r\n- We need to generate vector embeddings and store the specifications in plain text. \r\n\r\nFor now we can work off of a static snapshot of registrants. In the future, we should automatically scrape their completed issues as soon as they register on our site. \r\n\r\n[auth.users.json](https://github.com/user-attachments/files/18005367/auth.users.json)\r\n[auth.users.csv](https://github.com/user-attachments/files/18005368/auth.users.csv)\r\n\n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-vector-embeddings\nIssue Number: #56\nTime to Complete: 379 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Week"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-03-06T08:34:27.000Z] [rndquu]:\nOriginal [comment](https://github.com/ubiquity/pay.ubq.fi/issues/182#issuecomment-1980238150)\r\n\r\nWhat should be done:\r\n- on permits generation ([example](https://github.com/ubiquity/pay.ubq.fi/issues/182#issuecomment-1980167172)) we should save them to the `permits` table in supabase (use pavlovcik's DB instance)\n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-conversation-rewards\nIssue Number: #13\nTime to Complete: 1752 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <2 Hours"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-09-15T20:05:10.000Z] [0x4007]:\n1. We need to be able to select which `ubiquibot-config.yml` to edit, so we at minimum need an organization picker after GitHub authentication. \r\n2. We need to parse the YML file, and target the config based on the plugin's URL/location. Then edit the YML file and push the commit using the user's credentials.\r\n\r\nMore thoughts on [the readme](https://github.com/Ubiquity-OS/ubiquity-os-plugin-installer?tab=readme-ov-file#add--remove-config).\r\n\r\n### LLM \r\n\r\nWithout research, the lazy answer is that LLMs can easily solve the problem. We could even consider passing in the most important/relevant files of the plugin so that the LLM can figure out all the default values and other miscellaneous details. \r\n\r\nBut it would certainly be preferred to implement this with traditional code. I think with a bit of research it can be pretty straightforward.\n\n### Issue Details\nRepository: ubiquity-os/ubiquity-os-plugin-installer\nIssue Number: #3\nTime to Complete: 1601 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Day"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-10-10T08:10:21.000Z] [0x4007]:\nLooks like this was never fixed. Should use full webhook names.\r\n\r\nUsing new shortened versions decreases maintainability because it can lead to developer confusion.\r\n\r\nhttps://github.com/ubiquity-os-marketplace/daemon-disqualifier/blob/9ca3f7ba20a48385151a55e7cf52e57cafa9cf65/tests/main.test.ts#L67\r\n\r\n_Originally posted by @0x4007 in https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/22#discussion_r1794931278_\r\n            \n\n### Issue Details\nRepository: ubiquity-os-marketplace/daemon-disqualifier\nIssue Number: #29\nTime to Complete: 263 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Hour"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-10-24T04:01:56.000Z] [Keyrxng]:\nhttps://github.com/ubiquity-os-marketplace/command-ask/blob/e45db813be018fe8772414ca6ec7cbba3b8e55e1/src/adapters/openai/helpers/completions.ts#L40-L42\r\n\r\nhttps://github.com/ubiquity-os-marketplace/command-ask/blob/e45db813be018fe8772414ca6ec7cbba3b8e55e1/src/handlers/ask-llm.ts#L70\r\n\r\nI think these should be dynamic, I don't have super clear context on them but from what I can surmise they'd benefit from it.\r\n\r\n- Are they restricted to being one-word strings? What's the max length if not? How many truths can we provide/what's the optimal amount?\r\n- Are they supposed to embody the org, the incoming query or the task in relation to the current `@ubqbot` command or the fully built `formattedChat` that includes all context?\r\n\r\nI think we have GPT-4o build our array based on the input it's given because:\r\n1. Truths are dynamic and based on either A) fully built/initial incoming user query B) built around the payload issue spec or whatever C) task spec when considering code review\r\n2. We need a quick response imo, a huge spec to truth followed by the spec + the entire diff both to `o1` may be too long to wait for little added benefit.\n\n### Issue Details\nRepository: ubiquity-os-marketplace/command-ask\nIssue Number: #13\nTime to Complete: 91 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <4 Hours"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-12-31T09:08:01.000Z] [0x4007]:\n> We are exploring methods to evaluate comment readability and conciseness using **Flesch-Kincaid** readability metrics. These formulas assess the complexity and clarity of text based on sentence length and word syllables:\r\n\r\n> 1. **Flesch Reading Ease:** Rates text on a scale from 0 (difficult) to 100 (easy). Scores can help determine how easily a comment can be understood.\r\n\r\n> These metrics can help us identify verbose comments vs. concise, high-value inputs\r\n\r\nThis seems a lot more interesting compared to word count but we should test. \r\n\r\n_Originally posted by @0x4007 in https://github.com/ubiquity-os-marketplace/text-conversation-rewards/issues/97#issuecomment-2363145914_\r\n            \r\nWe can use an npm package to do most of the work, but I think that tweaking the weighting of the output of this module might take time to get right, which is why I made the time 4 hours instead of something like 1 hour. \r\n\r\nAs an extension of this, if it is successful, then we can consider removing word counting from the scoring criteria, and instead use the amount of html tags as a proxy for comment length. \r\n\r\nFor example, a comment with many list items, images, and links is more likely to be \"longer\" than a comment without. This may place the emphasis on higher Flesch Reading Ease (more easily understandable) and useful elements (images, links) vs writing verbose comments with low information density etc. \n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-conversation-rewards\nIssue Number: #230\nTime to Complete: 887 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <4 Hours"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-03-15T05:27:36.000Z] [0x4007]:\n## Context\r\n\r\nImplement a mechanism to reward contributors based on their comments by evaluating:\r\n- **Word count** as a `quantitative` metric, focusing on content formatting.\r\n- **Relevance** to the topic as outlined in the issue specification, marked as `qualitative`[^1].\r\n- **Clarity** of articulation, ensuring comments are easily understandable[^2].\r\n\r\nExclude:\r\n- Comments from bots.\r\n- Bot commands, identified by syntax like `/wallet 0x...`.\r\n\r\nDue to architectural changes, avoid generating permits in this module. Determine an appropriate return value to pass to the kernel for subsequent handling, aiming for:\r\n1. A final permit generation interface formatted as `Record<Username, string>`, e.g., `{ \"pavlovcik\": \"50\" }`[^3].\r\n2. Inclusion of reward amount metadata to transparently explain the rationale behind each reward[^4].\r\n\r\n## Score Calculation\r\n\r\nThe final score is a product of the three metrics: `quantitative (sum)` * `qualitative` * `clarity`. Word counts are adjusted by element type, excluding blockquotes.\r\n\r\n## Scope\r\n\r\nTransition from the monolithic `ubiquibot` to a kernel-plugin structure, addressing:\r\n- Migration and reimplementation of conversation rewards logic.\r\n- Integration of \"data aggregation\" for activity related to issues and pull requests.\r\n- Reward calculations based on `quantitative`, `qualitative`, and `clarity` evaluations.\r\n- Display of scoring metrics in a detailed manner as in the current [reward comment](https://github.com/ubiquity/work.ubq.fi/issues/26#issuecomment-1996890295).\r\n\r\n## Requirements\r\n\r\n- Achieve 80%+ code coverage with Jest tests.\r\n- Ensure scoring configurability, with initial hardcoding acceptable.\r\n- Define the kernel-plugin interface, focusing on core logic testing independently of the kernel.\r\n- Develop a method for returning structured data conducive to HTML table formatting by another plugin for comprehensive reward displays.\r\n\r\n## Remarks\r\n\r\n- Main entry point of old version. https://github.com/ubiquibot/comment-incentives/blob/main/src/handlers/issue/issue-closed.ts\r\n- You can see I tried classifying contributor types for the sake of our config. At a high level we had four contributor main types: assignee, issuer (the issue author) collaborator (somebody added to the team) and contributor (default)\r\n- We also need to be able to configure the scoring for all of those classes, and also, the scoring of commenting on the issue or the pull request. I think my mistake the first time around was collecting each of these individually then scoring. This time around I'm collecting everything at once, and then I think it makes sense to classify and score.\r\n\r\n\r\n[^1]: Previous implementation used GPT-3.5 to assess how on-topic each comment is, assigning a float score accordingly.\r\n[^2]: Clarity evaluation may involve GPT-3.5 or GPT-4 for assessing the clearness of a comment's meaning or summarizing key points from verbose contributions.\r\n[^3]: Permit generation focuses on specifying an amount and the corresponding wallet address, without concerning itself with the underlying metadata.\r\n[^4]: Consideration for a dedicated permit generation module that solely manages permit details to minimize the attack surface area.\r\n\n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-conversation-rewards\nIssue Number: #2\nTime to Complete: 275 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Week"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-11-26T07:03:14.000Z] [0x4007]:\nA quick idea that can use improvement:\r\n\r\nAssignee can restart the disqualification timer by continuing to try. There's many clear examples of the task not being the right fit for the assignee and they try i.e. for months on projects that should be doable in a day.\r\n\r\nWe could consider doing limits on time limit \"top ups.\" So for example:\r\n```\r\nPriority 1 - 5 top ups\r\nPriority 2 - 4 top ups \r\nPriority 3 - 3 top ups \r\nPriority 4 - 2 top ups \r\nPriority 5 - 1 top up. \r\n```\r\n\r\nI suspect that priority 5 tasks will border on eliminating most even capable assignees but once the task is complete even if just slightly after deadline we can always retroactively assign credit. \r\n\r\n\r\n---\r\n\r\n- We should be able to toggle this behavior in the config. \r\n- If it is enabled the message should clearly explain the amount of remaining top ups. \r\n\r\nI foresee a bit of complexity around the logic related to dealing with the \"time limits\" for follow up/disqualify and the top up counter. \r\n- If the limits are 7/14 as they are now, then the first top up should occur after 14 days on a priority 1 normal project. \r\n- priority 5 top up would be after `14 / 5 = 2.8` days.\r\n- Check the assignment timestamp and use that as a point of reference to calculate the current top up counter/state. i.e. if the task was assigned 35 days ago, and the clock speed is 14 days, then `35/14=2.5` meaning we are still at top up number 2. \r\n\r\n## Example Context\r\n- https://github.com/ubiquity-os/plugins-wishlist/issues/46#issuecomment-2450630585\r\n- Assigned 1 November, but this should have been disqualified by 10 November. \r\n\r\nLogic: \r\n```\r\n14 days base timer / priority 4 = 3.5 days. \r\nthis means that top up counter increments every 3.5 days. \r\npriority 4 has 2 additional top ups. \r\n\r\n1 November is the original granted 3.5 day time limit. \r\nafter 3.5 days pass, the first top up is spent. \r\nafter another 3.5 days pass, the second top up is spent. \r\n\r\n3.5 + 3.5 + 3.5 = 10.5 days has elapsed \r\n\r\non the next attempt to follow up disqualification occurs because no more top ups remain. \r\n```\r\n\r\nRemarks:\r\n\r\nI wonder if the original time that we grant should be based on the `Time: ` label because I see problems with tasks that are set to `Time: <1 Week` and `Priority: 5 (Emergency)` they would only be able to get 5.6 days to work on it. \r\n\r\n\n\n### Issue Details\nRepository: ubiquity-os-marketplace/daemon-disqualifier\nIssue Number: #51\nTime to Complete: Not completed\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Day"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-11-02T16:25:08.000Z] [Keyrxng]:\nI enjoyed working on the first few AI features when I started contributing but I quickly realized the struggle in obtaining desired outcomes with our intricate use-cases and extended context windows.\r\n\r\nIt's even harder to unit test, or test in the normal sense so validating became pretty hard and so PRs took a long time to merge. Which is why I focused on other areas of the DAO to add value.\r\n\r\nI suggest we finally implement an absolutely unshakeable and beyond reproach benchmarking strategy for our AI features but this spec focuses on `/ask` in particular.\r\n\r\n---\r\n\r\n\r\n**Objective**: Establish a benchmark to evaluate the LLM's factual accuracy and relevance in responses using two primary data sources:\r\n   1. **Static Context**: Fixed linked issues in a benchmark issue, which remain unchanged across tests.\r\n   2. **Dynamic Embeddings**: Embeddings updated with each new comment in the org, affecting similarity-based data retrieval.\r\n\r\n---\r\n\r\n## Core Components\r\n\r\n### 1. Static Context (Linked Issues)\r\n   - **Purpose**: Ensure consistent accuracy in the LLM’s responses using static linked issues within a single benchmark issue.\r\n   - **Method**: Programmatically collect and freeze the linked issues for the benchmark issue. Track how effectively these fixed issues contribute to answering queries.\r\n   - **Evaluation Metric**: Measure response consistency by repeating tests. Responses should remain factually stable, given the fixed nature of the linked issues.\r\n\r\n### 2. Dynamic Embeddings Search\r\n   - **Purpose**: Evaluate the LLM's use of dynamically updated embeddings to retrieve relevant information and factor it into responses.\r\n   - **Aspects to Measure**:\r\n     - **Relevance**: Assess how closely the returned embeddings match the query intent, using cosine similarity thresholds or human evaluation.\r\n     - **Impact on Output**: Track how embeddings modify or enrich the response, especially as new, unrelated comments add potential \"noise.\"\r\n   - **Evaluation Metric**: Compare responses over time to note if relevance or factual accuracy decreases with embedding dilution.\r\n\r\n### 3. Output Effectiveness with Combined Context\r\n   - **Purpose**: Determine the effectiveness of the LLM’s response when combining static context (linked issues) and dynamic embeddings.\r\n   - **Method**: Establish target answers for each test query and evaluate responses against these targets. Track deviations in relevance and factual accuracy.\r\n   - **Evaluation Metric**: Use precision, recall, and human evaluators to score output accuracy and relevance based on combined context.\r\n\r\n---\r\n\r\n## Test Workflow\r\n\r\n1. **Initial Baseline Run**: Execute the benchmark test against the chosen issue, storing the initial output and measuring linked issues' contribution, embedding relevance, and combined context effectiveness.\r\n2. **Recurrent Testing**: With each change (e.g., prompt adjustments, logic changes), re-run the benchmark test, noting any shifts in relevance, accuracy, or response consistency.\r\n\r\n---\r\n\r\n## Deliverables\r\n\r\n1. **Baseline Output and Metrics**: Document the initial output with relevance and accuracy metrics for linked issues, embeddings, and combined context.\r\n2. **Automated Test Script**: Create a script to repeat the test scenario on the benchmark issue and log metrics.\r\n3. **Evaluation Report**: Provide a concise report after each test run to track trends and deviations in LLM performance over time, especially as embeddings evolve.\r\n\r\nThis benchmark framework will allow reliable measurement of the LLM's accuracy and adaptability with respect to static context and dynamic embeddings, enabling consistent future optimizations.\r\n\r\nhttps://chatgpt.com/share/67265190-bec8-8000-ae58-a973a006e3aa\r\n\n\n### Issue Details\nRepository: ubiquity-os-marketplace/command-ask\nIssue Number: #32\nTime to Complete: 2 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Week"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-09-08T05:40:33.000Z] [0x4007]:\nOn `issue.created` and `issue.edited` we should check if there are any open issues that are x% similar within the repository. There should be two configurable percentages: \n1. A `warning` threshold, perhaps 75% similar as a default \n2. \"Match\" threshold, 95% similar default. \n\n\n\n\n- If a \"match\" is found, the bot should \"close as unplanned\" \n- If a \"warning\" level issue has been found, post a comment with all the similar open issues. Target and edit this comment if it currently exists. \n\nIt isn't entirely clear to me if this should be a separate plug-in, but this does require coupling to the same vector embeddings database. Another idea is to pass in the authentication details in each vector embeddings related plugin's config.\n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-vector-embeddings\nIssue Number: #6\nTime to Complete: 197 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Week"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-12-02T21:52:52.000Z] [gentlementlegen]:\nWhen no `KERNEL_PUBLIC_KEY` is supplied, the runs fail saying the given key is too short. My suspicion is that the default key is not used but `\"\"` is used instead. See this run for reference: https://github.com/ubiquity-os-marketplace/daemon-pricing/actions/runs/12128570532/job/33815214041\r\n\r\nSDKs will need to get updated across plugins as well.\n\n### Issue Details\nRepository: ubiquity-os/plugin-sdk\nIssue Number: #36\nTime to Complete: 29 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <15 Minutes"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-12-12T12:28:54.000Z] [0x4007]:\nThis has been deprecated in favor of the reminder schedule comments immediately following.  \n\n> @rndquu the deadline is at Fri, Dec 13, 12:22 PM UTC\n\n_Originally posted by @ubiquity-os-beta in https://github.com/ubiquity-os-marketplace/text-conversation-rewards/issues/64#issuecomment-2538758209_\n\n### Issue Details\nRepository: ubiquity-os-marketplace/command-start-stop\nIssue Number: #105\nTime to Complete: 499 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <15 Minutes"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-11-16T16:11:25.000Z] [0x4007]:\nWe need to make evals to benchmark accuracy\n\n\"Search for Braintrust AI\"\n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-conversation-rewards\nIssue Number: #185\nTime to Complete: 700 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Day"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-11-21T04:46:55.000Z] [gentlementlegen]:\n> If there is a warning there, two reasons:\r> \n> - either the default is missing\r> \n> - either the plugin has not be recompiled and the manifest is not up to date\r> \n> \r> \n> Values with defaults do not produce such warnings.\r> \n> \r> \n> Edit: I checked the repo and realized that this plugin do not use our org official build action\r> \n> https://github.com/ubiquity-os-marketplace/command-start-stop/blob/development/.github/workflows/update-configuration.yml\r> \n> \r> \n> should be using action-plugin-deploy (which is why the manifest is wrong). \n\n _Originally posted by @gentlementlegen in [41e45ec](https://github.com/ubiquity-os-marketplace/.ubiquity-os/commit/41e45ec5c4455d2ec3d1976f1e8d7551ab62f4bf#commitcomment-149338525)_\n\n### Issue Details\nRepository: ubiquity-os-marketplace/command-start-stop\nIssue Number: #90\nTime to Complete: 1292 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <15 Minutes"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-06-25T06:32:36.000Z] [rndquu]:\nDepends on https://github.com/ubiquibot/command-start-stop/pull/1\r\n\r\nCheck [this](https://github.com/rndquu-org/test-repo/issues/55#issuecomment-2188079534) `/stop` command. The bot (i.e. `ubiquibot/command-start-stop` plugin) closed the issue but also [tried](https://github.com/rndquu-org/test-repo/issues/55#issuecomment-2188079603) to close a linked PR although this PR is from a different repo with different assignee.\r\n\r\nWhat should be done:\r\n- make sure the plugin closes the correct linked PRs\r\n- write a regression test\n\n### Issue Details\nRepository: ubiquity-os-marketplace/command-start-stop\nIssue Number: #4\nTime to Complete: 1226 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Hour"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2025-02-05T20:34:58.000Z] [0x4007]:\n> ```diff\n> ! Not Found - https://docs.github.com/rest/issues/comments#get-an-issue-comment\n> ```\n> \n> <!-- UbiquityOS - async - CLOUDFLARE_VERSION_METADATA - @0x4007 - https://dash.cloudflare.com/<missing-cloudflare-account-id>/workers/services/view/localhost/production/observability/logs?granularity=0&time=%7B%22type%22%3A%22absolute%22%2C%22to%22%3A1738786471247%2C%22from%22%3A1738786351247%7D\n> {\n>   \"message\": \"Not Found - https://docs.github.com/rest/issues/comments#get-an-issue-comment\",\n>   \"name\": \"HttpError\",\n>   \"stack\": \"HttpError: Not Found - https://docs.github.com/rest/issues/comments#get-an-issue-comment\\n    at fetchWrapper (file:///home/pdstiago/text-vector-embeddings/.wrangler/tmp/dev-UCBRe1/worker.js:52956:11)\\n    at async Job.doExecute (file:///home/pdstiago/text-vector-embeddings/.wrangler/tmp/dev-UCBRe1/worker.js:30515:22)\"\n> }\n> -->\n> \n\nI suppose we eventually should throw a specific and clear error saying that this is out of the current organization and it does not have permissions to annotate it.  \n\n_Originally posted by @0x4007 in https://github.com/koya0/.ubiquity-os/issues/22#issuecomment-2637966220_\n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-vector-embeddings\nIssue Number: #78\nTime to Complete: Not completed\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <15 Minutes"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2025-01-08T11:56:41.000Z] [0x4007]:\nThere are situations where we write about certain issues that were likely to have been posted in the past, but are difficult to find. \n\nImagine if using vector embeddings, we can instantly link to whatever issues are being referenced: \n\n> We had some problems with KV, so I don't know if it's wise to enable plugin communication without fixing the problem (I can't find the issue about this). Alternatively we could make this as part of a module inside  `text-conversation-rewards`\n\nFrom https://github.com/kingsley-einstein/contributions-scan/pull/4#issuecomment-2577468623\n\nUsing this command, we should replicate the behavior of issue deduplication on the existing comment and edit/add the footnotes with links to the source issues.\n\nA limitation that I see is how wide of a search we should conduct. Within the same repository is somewhat useless, and globally might incur too much noise. \n\nOrganization wide might be the best default, but sometimes it would be very useful, especially for us using three organizations, to do a global annotation/search. \n\nPerhaps we can have optional arguments to scope the search.\n\n```\n/annotate https://github.com/kingsley-einstein/contributions-scan/pull/4#issuecomment-2577468623 global\n```\n\nBut default can be just\n\n```\n/annotate\n```\n\nAnd it will automatically annotate the previous comment with an organization wide search. \n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-vector-embeddings\nIssue Number: #67\nTime to Complete: 679 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <4 Hours"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-08-24T01:52:57.000Z] [gentlementlegen]:\n              @gentlementlegen it didnt collect any review comments this time.\r\n\r\n_Originally posted by @0x4007 in https://github.com/ubiquity/devpool-directory-bounties/issues/31#issuecomment-2306908267_\r\n            \r\nMy suspicion is that the linked pull-request was not properly fetched. This can be solved by using graphql instead of manually fetching linked events. This might not be the cause of the problem but this is a needed improvement.\n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-conversation-rewards\nIssue Number: #95\nTime to Complete: 432 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <2 Hours"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2025-02-14T03:03:55.000Z] [shiv810]:\nThe current time estimate relies on the user/contributor to suggest accurate time estimates, which are often inflated. [^05^] [^04^] [^02^]    The pricing strategy should award natural time estimates and penalize inflated ones in the final reward calculation.\n\nOne such strategy to calculate would be to fine-tune a LLM with past issue threads and the corresponding time estimates to make time estimate predictions, and use this for calculation. Before we start fine-tuning, we would need a good corpus of issue threads, with at least 250 to 300 clean examples. [^03^]\n\n-  #82 \n\nOnce this is done, we should be able to build the fine-tuned model. [^01^]  \n\n\n\n\n\n\n\n\n[^01^]: ⚠ 70% possible duplicate - [Set labels command](https://www.github.com/ubiquity-os-marketplace/daemon-pricing/issues/51#51)\n\n[^02^]: ⚠ 70% possible duplicate - [Automatically Handling Prerequisites](https://www.github.com/ubiquity-os-marketplace/daemon-pricing/issues/43#43)\n\n[^03^]: ⚠ 74% possible duplicate - [Scraper: Scrape Issue Threads with Time estimates.](https://www.github.com/ubiquity-os-marketplace/daemon-pricing/issues/82#82)\n\n[^04^]: ⚠ 77% possible duplicate - [Automatic Priority and Time Labeling](https://www.github.com/ubiquity-os-marketplace/daemon-pricing/issues/71#71)\n\n[^05^]: ⚠ 81% possible duplicate - [Incentives for lower estimates](https://www.github.com/ubiquity-os-marketplace/daemon-pricing/issues/77#77)\n\n\n\n### Issue Details\nRepository: ubiquity-os-marketplace/daemon-pricing\nIssue Number: #81\nTime to Complete: Not completed\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <4 Hours"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-08-15T09:17:05.000Z] [0x4007]:\n122 `ol` and `li` counted in this comment, which is not correct. \r\n\r\n<img width=\"834\" alt=\"image\" src=\"https://github.com/user-attachments/assets/d97ce7e4-9764-406b-a0b5-cdd3dda8d718\">\r\n\r\n\r\n_Originally posted by @ubiquityos[bot] in https://github.com/ubiquity/pay.ubq.fi/issues/259#issuecomment-2290919985_\r\n            \n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-conversation-rewards\nIssue Number: #82\nTime to Complete: 717 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <2 Hours"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-10-25T17:17:30.000Z] [Keyrxng]:\nThis plugin was designed with a very clear structure for context window formatting as per the [spec for V1](https://github.com/ubiquity-os/plugins-wishlist/issues/29#issue-2402769945), which was and is implemented to spec as per the [unit test](https://github.com/ubiquity-os-marketplace/command-ask/blob/dbf6c9300a4489df51c8a89bc15401f7bba81625/tests/main.test.ts#L121) via these [fns](https://github.com/ubiquity-os-marketplace/command-ask/blob/development/src/helpers/format-chat-history.ts).\r\n\r\nIn building #14 rn I've just noticed that what is being fed to the model has been stripped of all this formatting and structure, below is the comparison.\r\n\r\n- The readme should have it's own section within the context window like others, it's currently inside the conversational block\r\n- I assume the headers, dividers, and structure should be returned and the model fed the structured version?\r\n- `ubiquibot-configyml yml plugins - uses - plugin link0 with model openaibaseurl` this is the code block in the readme, the plugin install yml code which should read:\r\n\r\n```yml\r\nplugins:\r\n  - uses:\r\n      - plugin: http://localhost:4000\r\n        with:\r\n          model: \"\"\r\n          openAiBaseUrl: \"\"\r\n```\r\n\r\n1. We've lost the url in `- plugin: http://localhost:4000`\r\n2. `ubiquibot-configyml yml plugins` - period removed but also yml duplicated because backticks removed.\r\n\r\n---\r\n\r\n# What's being fed to the model:\r\n\r\ncurrent issue 10 specification ubq-testing/ask-plugin/10 test end current issue 10 specification current issue 10 conversation ubq-testing/ask-plugin 10 2438352893 keyrxng ubqbot test 2614664090 keyrxng test 2614664090 keyrxng ubiquity-os/command-ask this is a highly context aware github organization integrated bot that uses the openai gpt-4o model to provide highly relevant answers to questions and queries in github issues and pull requests usage in any repository where your ubiquity os app is installed both issues and pull requests alike you simply mention ubiquityos with your question or query and using the latest openai gpt-4o model the bot will provide you with a highly relevant answer how it works with its huge context window we are able to feed the entire conversational history to the model which we obtain by recursively fetching any referenced issues or pull requests from the chat history this allows the model to have a very deep understanding of the current scope and provide highly relevant answers as it receives everything from discussions to pull request diffs and review comments it is a highly versatile and capable bot that can assist in a wide range of scenarios installation ubiquibot-configyml yml plugins - uses - plugin link0 with model openaibaseurl devvars for local testing to use the openrouter api for fetching chat history set the openrouterapikey in the devvars file and specify the openaibase url in the ubiquibot-configyml file alternatively you can set the openaiapikey in the devvars file sh openaiapikeyyouropenaiapikey supabaseurlyoursupabaseurl supabasekeyyoursupabasekey voyageaiapikeyyourvoyageaiapikey openrouterapikeyyouropenrouterapikey ubiquityosappnameubiquityos testing sh yarn test end current issue 10 conversation\r\n\r\n# The formatted chat:\r\n\r\nthis is logged before the changes happen.\r\n\r\nFORMATTED CHAT:                                                                                                                                                                   \r\n === Current Issue #10 Specification === ubq-testing/ask-plugin/10 ===\r\n\r\ntest\r\n=== End Current Issue #10 Specification ===\r\n\r\n=== Current Issue #10 Conversation === ubq-testing/ask-plugin #10 ===\r\n\r\n2438352893 Keyrxng: @ubqbot test\r\n2614664090 Keyrxng: test\r\n2614664090 Keyrxng: # `@ubiquity-os/command-ask`\r\n\r\nThis is a highly context aware GitHub organization integrated bot that uses the OpenAI GPT-4o model to provide highly relevant answers to questions and queries in GitHub issues and pull requests.\r\n\r\n## Usage\r\n\r\nIn any repository where your Ubiquity OS app is installed, both issues and pull requests alike, you simply mention `@UbiquityOS` with your question or query and using the latest OpenAi GPT-4o model, the bot will provide you with a highly relevant answer.\r\n\r\n## How it works\r\n\r\nWith it's huge context window, we are able to feed the entire conversational history to the model which we obtain by recursively fetching any referenced issues or pull requests from the chat history. This allows the model to have a very deep understanding of the current scope and provide highly relevant answers.\r\n\r\nAs it receives everything from discussions to pull request diffs and review comments, it is a highly versatile and capable bot that can assist in a wide range of scenarios.      \r\n\r\n## Installation\r\n\r\n`ubiquibot-config.yml`:\r\n\r\n```yml\r\nplugins:\r\n  - uses:\r\n      - plugin: http://localhost:4000\r\n        with:\r\n          model: \"\"\r\n          openAiBaseUrl: \"\"\r\n```\r\n\r\n`.dev.vars` (for local testing):\r\n\r\nTo use the Openrouter API for fetching chat history, set the `OPENROUTER_API_KEY` in the `.dev.vars` file and specify the OpenAiBase URL in the `ubiquibot-config.yml` file. Alternatively, you can set the `OPENAI_API_KEY` in the `.dev.vars` file.\r\n\r\n```sh\r\nOPENAI_API_KEY=your_openai_api_key\r\nSUPABASE_URL=your_supabase_url\r\nSUPABASE_KEY=your_supabase_key\r\nVOYAGEAI_API_KEY=your_voyageai_api_key\r\nOPENROUTER_API_KEY=your_openrouter_api_key\r\nUBIQUITY_OS_APP_NAME=\"UbiquityOS\"\r\n```\r\n\r\n## Testing\r\n\r\n```sh\r\nyarn test\r\n```\r\n\r\n=== End Current Issue #10 Conversation ===\n\n### Issue Details\nRepository: ubiquity-os-marketplace/command-ask\nIssue Number: #16\nTime to Complete: Not completed\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <15 Minutes"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-07-13T15:10:58.000Z] [rndquu]:\nthis looks good but I have another idea: \r\n\r\nhow about we add another variable `fee` (percentage) and `totalAfterFee`/`totalBeforeFee` and we leave other values unmodified? this way we can display a comment which includes information about the total reward, how much was the fee and total reward after the fee.\r\n\r\nThis would increase transparency so the user can clearly see how much the comments/task was worth and sees how much was the fee\r\n\r\n_Originally posted by @whilefoo in https://github.com/ubiquibot/conversation-rewards/pull/43#pullrequestreview-2176251004_\r\n            \n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-conversation-rewards\nIssue Number: #57\nTime to Complete: 2439 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Hour"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2025-01-14T10:38:52.000Z] [gentlementlegen]:\n> I think I figured out why, basically the main version is not up to date. This message doesn't exist anymore. \r\n\r\n _Originally posted by @gentlementlegen in [#111](https://github.com/ubiquity/business-development/issues/111#issuecomment-2589563669)_\r\n\r\nThe deployment target branch seems to always be the default instead of the branch where the build occurred.\n\n### Issue Details\nRepository: ubiquity-os-marketplace/command-start-stop\nIssue Number: #124\nTime to Complete: 48 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <15 Minutes"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-12-13T00:50:50.000Z] [0x4007]:\nThere's a few high impact elements to determine the relevance of a comment. Which is why in the default formatting scoring we have high ($5) credit per instance. \n\n### image\n\nRelevance currently doesn't understand image contents. \n\nWe can insert the image description inside of its \"alt\" attribute. \n\n```html\n<img width=\"106\" alt=\"@0x4007 profile pic\" src=\"https://github.com/user-attachments/assets/a4109ba7-fdeb-49e0-b492-039cea79bcc7\" />\n```\n\n### link\n\nIt could also be really interesting to pull the text contents from links to also score their relevance. \n\nWe can insert a summary inside of its title attribute. \n\n```html\n<a href=\"https://example.com\" title=\"A summary of the link's contents\">Example</a>\n```\n\n### code\n\nIt would be interesting to discuss this in a separate proposal because this seems like it could be really complex to implement well. \n\nOriginal context https://github.com/ubiquity-os-marketplace/command-wallet/issues/28#issuecomment-2540293850\n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-conversation-rewards\nIssue Number: #215\nTime to Complete: Not completed\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Day"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-06-12T07:15:37.000Z] [gentlementlegen]:\nWe should look into a more robust configuration merge.\r\n\r\nQuote from discussion:\r\n\r\nI know there isn't a concept of merging configurations together on GitHub Actions. \r\n\r\nThis doesn't address the key point I am making. The cause we are discussing is a collision with dependency IDs. And whether there are real-world scenarios where configurations might lead to duplicate dependencies. \r\n\r\nFrom my experience creating GitHub Actions CI scripts, I haven't encountered situations where adding redundant dependencies was necessary. This makes the theoretical merging logic problem irrelevant to our practical implementation. \r\n\r\nWe should focus on the actual conditions under which our configurations operate, rather than hypothetical scenarios that don't align with real-world use cases.\r\n\r\nBasically I'm saying to drop support for using the same dependency more than one, particularly when associated with the same webhook event. See [this comment](https://github.com/ubiquity/ubiquibot-kernel/pull/47#issuecomment-2154146051) for a suggestion on how to handle that.\r\n\r\n_Originally posted by @0x4007 in https://github.com/ubiquity/ubiquibot-kernel/issues/47#issuecomment-2162159354_\r\n            \n\n### Issue Details\nRepository: ubiquity-os/ubiquity-os-kernel\nIssue Number: #54\nTime to Complete: Not completed\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <4 Hours"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-11-20T16:30:02.000Z] [rndquu]:\nIt makes sense to add SDK methods for storing arbitrary json in the `.ubiquity-os` partner repository.\r\n\r\n@Keyrxng [implemented](https://github.com/ubiquity-os-marketplace/ubiquity-os-kernel-telegram/blob/86303ce43c4b2ea3bf4cd931eed2dc97c8249a4e/src/adapters/github/storage-layer.ts) smth similar but I'm not sure if it's production ready.\r\n\r\nWhat should be done:\r\n1. Add SDK methods for storing and reading arbitrary json values from a single file located in the `.ubiquity-os` partner repository. You may use a 3rd party npm package like https://github.com/typicode/lowdb or https://github.com/Belphemur/node-json-db of https://github.com/gitrows/gitrows. In the end each plugin should correspond to its own `plugin-name.json` file.\r\n2. Add a quickstart section in the readme to show how to install the SDK package\r\n3. Add json related API methods in the readme (ideally they should be generated automatically using smth like https://jsdoc.app/)\r\n\r\nRight now our biggest DB table is the `permits` table with 314 rows (except for the `logs` table which has 1M rows). This is not that much. In theory we could ditch the supabase DB at all and use only json files as a DB until we hit optimization issues. Json as a DB has lots of cons but simplicity (in some cases) outweighs them. \r\n\r\nI feel like it's better to use a \"single json file per plugin\" approach compared to [making](https://github.com/ubiquity-os/database/issues/1) supabase DB consistent and maintaining its single instance for all of the core plugins.\n\n### Issue Details\nRepository: ubiquity-os/plugin-sdk\nIssue Number: #30\nTime to Complete: Not completed\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <4 Hours"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2025-02-15T06:16:31.000Z] [gentlementlegen]:\n> [!CAUTION]\n> Could not fetch base commit for this pull request\n> \n> <!-- UbiquityOS - ReviewIncentivizerModule.fetchReviewDiffRewards - e97a507dc82e8a8fc69963078c9ca7b1399c0157 - @rndquu - https://github.com/ubiquity-os-marketplace/text-conversation-rewards/actions/runs/13332917553\n> {\n>   \"caller\": \"ReviewIncentivizerModule.fetchReviewDiffRewards\"\n> }\n> -->\n>  \n\n _Originally posted by @ubiquity-os in [#29](https://github.com/ubiquity/onboard.ubq.fi/issues/29#issuecomment-2659719300)_\n\n## What happened\n\nThe review incentivizer failed to fetch the diff in a cross-repository scenario.\n\n## What was expected\n\nThe proper repository and base should be used the create the diff. [^05^] [^04^] [^03^] [^01^]\n\n## How to reproduce\n- create an issue in repo A\n- create a PR in repo B that will close the issue of repo A\n- close repo B pull-request\n- notice that the rewards won't be able to generate [^02^]\n\n[^01^]: ⚠ 74% possible duplicate - [Reviewer comments are not retrieved properly](https://www.github.com/ubiquity-os-marketplace/text-conversation-rewards/issues/212#212)\n\n[^02^]: ⚠ 74% possible duplicate - [Review Incentive Double Check Calculations](https://www.github.com/ubiquity-os-marketplace/text-conversation-rewards/issues/260#260)\n\n[^03^]: ⚠ 74% possible duplicate - [Use diffs on comments to extract human content from bot modifications](https://www.github.com/ubiquity-os-marketplace/text-conversation-rewards/issues/201#201)\n\n[^04^]: ⚠ 76% possible duplicate - [Change linked pull request fetch](https://www.github.com/ubiquity-os-marketplace/text-conversation-rewards/issues/95#95)\n\n[^05^]: ⚠ 80% possible duplicate - [Close and Credit Doesn't Work](https://www.github.com/ubiquity-os-marketplace/text-conversation-rewards/issues/262#262)\n\n\n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-conversation-rewards\nIssue Number: #275\nTime to Complete: 140 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <2 Hours"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-09-08T06:14:54.000Z] [0x4007]:\nWhen a new task is posted to our network, UbiquityOS should recommend qualified contributors. \r\n\r\n- The system must understand the \"closed as complete\" project specifications. \r\n- this should run when \r\n   - an issue is priced, so I believe on `issues.label_added`\r\n   - issue created `issues.created`\r\n   - task specification has been edited `issues.edited `\r\n- if the new task is 75% similar or greater (configurable) it should post a comment with a list of those issues in order of percentage match. This comment SHOULD NOT tag the users. Instead this is intended for a human to check their work, and tag them in as needed. \r\n- Be sure to add the `www.` prefix on the github href so that it does not register as a \"link back\" on the GitHub UI over on their issue.  \r\n\r\nFor example it should look something like:\r\n\r\n```\r\n### 0x4007\r\n- ubiquity/ubiquity-dollar#123 87% match. \r\n### rndquu\r\n- ubiquity/ubiquity-dollar#250 77% match. \r\n```\r\n\r\n\r\n\r\n- if the search results comment exists, target and edit it instead of reposting. This is relevant when editing the specification. \r\n\r\nEventually this may be configurable to be network wide (global) organization wide, or repository wide. But for this first version, we will do network wide.\r\n\r\n---\r\n\r\nAnother configuration of this idea could be to recommend the contributor in the organization with the highest match, even if it doesn't hit the threshold. If within the organization, perhaps tagging is appropriate. Perhaps it makes sense to handle this in a separate task. \n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-vector-embeddings\nIssue Number: #7\nTime to Complete: 508 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Week"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-12-31T02:45:05.000Z] [0x4007]:\nThis user attempted to register a bitcoin wallet address. The error message should clarify that we only support EVM payouts. Although saying \"Ethereum\" may be more clear for new folks. \n\n```diff\n# Skipping to register a wallet address because both address/ens doesn't exist\n```\n\n<!-- Ubiquity - undefined -  - undefined\n{\n  \"caller\": \"registerWallet\"\n}\n-->\n\n\n_Originally posted by @ubiquity-os-beta in https://github.com/ubiquity-os-marketplace/command-ask/issues/33#issuecomment-2566073172_\n\n### Issue Details\nRepository: ubiquity-os-marketplace/command-wallet\nIssue Number: #33\nTime to Complete: 338 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <15 Minutes"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-11-02T18:43:01.000Z] [whilefoo]:\nThis is the [issue](https://github.com/ubiquity-os/ubiquity-os-kernel/issues/166) where I got disqualified 3 days earlier than the deadline\r\n\r\nWhen I started the task with `/start` on 28th October, the bot said the deadline is Sat, Nov 2, 2:36 PM UTC, however on 30th October, the bot said the deadline has passed and unassigned me\r\n\r\nFound another [issue](https://github.com/ubiquity-os/permit-generation/issues/71#issuecomment-2448881918) with the same problem\r\n\n\n### Issue Details\nRepository: ubiquity-os-marketplace/daemon-disqualifier\nIssue Number: #44\nTime to Complete: 947 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Hour"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-05-30T03:00:04.000Z] [gentlementlegen]:\nWe should keep comparing the old bot results with the new one, to make sure they behave similarly.\r\n\r\nIssues spotted:\r\n- specification should have a relevance of `1` (c.f. https://github.com/ubiquibot/conversation-rewards/issues/45)\r\n- all the items should be listed (case of missing `h5`)\r\n- details of the applied multiplier should be displayed (supposedly already implemented, but not showing up, probably not the latest deployment)\r\n- review comments should be considered\r\n- relevance should be set at 1 in case of bug during ChatGpt evaluation\r\n- specification doesn't seem to be taken into account\r\n- comments are ignored https://github.com/ubiquibot/conversation-rewards/issues/26\r\n- should properly display all the comments: https://github.com/ubiquibot/conversation-rewards/issues/66#issuecomment-2255243916\r\n\r\nOld bot configuration: https://github.com/ubiquity/ubiquibot-config/blob/development/.github/ubiquibot-config.yml\r\n\r\nRelated results:\r\n- https://github.com/ubiquity/pay.ubq.fi/issues/229#issuecomment-2136721623\r\n- https://github.com/ubiquity/pay.ubq.fi/issues/195#issuecomment-2143325849\r\n- https://github.com/ubiquibot/plugins-wishlist/issues/10#issuecomment-2148782131\r\n- https://github.com/ubiquibot/plugins-wishlist/issues/13#issuecomment-2156239752\r\n- https://github.com/ubiquity/rpc-handler/issues/21#issuecomment-2211766470\r\n- https://github.com/ubiquity/ubiquibot-logger/issues/19#issuecomment-2208243211\r\n- https://github.com/ubiquibot/conversation-rewards/issues/29#issuecomment-2222259192\r\n- https://github.com/ubiquity/ubiquibot-kernel/issues/58#issuecomment-2232128838\n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-conversation-rewards\nIssue Number: #26\nTime to Complete: 1880 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Day"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-09-26T08:27:12.000Z] [gentlementlegen]:\n```diff\r\n! No labels are set.\r\n```\r\n<!--\r\n{\r\n  \"error\": {},\r\n  \"caller\": \"startStopTask\"\r\n}\r\n-->\r\n\r\n_Originally posted by @ubiquity-os[bot] in https://github.com/ubiquity-os-marketplace/command-start-stop/issues/23#issuecomment-2376236748_\r\n            \r\n\r\n\r\nThis should not be posted to the issue.\n\n### Issue Details\nRepository: ubiquity-os-marketplace/command-start-stop\nIssue Number: #60\nTime to Complete: 142 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Hour"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-08-25T07:12:20.000Z] [0x4007]:\nQualitative and quantitative analysis have unexpected results according to how I implemented in v1. Research, and refine. \n\n> I think we need to tweak the qualitative analysis. Somehow I got 0 relevance on my comments which didn't seem to be the case before with gpt3.5 10x samples. \n\n> Also I should be getting img credit. \n\n> Seems like there's problems with quantitative analysis as well \n\n_Originally posted by @0x4007 in https://github.com/ubiquibot/command-start-stop/issues/14#issuecomment-2308672581_\n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-conversation-rewards\nIssue Number: #97\nTime to Complete: 879 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Day"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-10-06T09:09:59.000Z] [0x4007]:\n- https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/142\r\n\r\nNoticed many small things that should be adjusted. \r\n- [Compile with NCC](https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/142#discussion_r1788979061) \r\n- [Dedicated App](https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/142#discussion_r1788980354)\r\n- [Linter Warning Fix](https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/142#discussion_r1788980677)\r\n- [Add Throw](https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/142#discussion_r1788981151)\r\n- [+ Syntax](https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/142#discussion_r1788982210)\n###### Similar [^01^]\n\n[^01^]: [Token Decimals Crash](https://www.github.com/ubiquity-os-marketplace/text-conversation-rewards/issues/148) 80%\n[^02^]: [Missing defaults for html tags](https://www.github.com/ubiquity-os-marketplace/text-conversation-rewards/issues/153) 75%\n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-conversation-rewards\nIssue Number: #143\nTime to Complete: 388 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Day"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-11-18T08:43:16.000Z] [0x4007]:\nWe need to calibrate the relevance thresholds for issue dedupe and the talent recommendation because i havent seen them work since we first deployed the plugins.\r\n\r\nI think we should always suggest at least one contributor (three default, in order of relevance) so we can test and see how accurate it is\r\n\r\nThis should be a config option to always recommend \r\n```yml\r\nalwaysRecommend: number\r\n```\r\nIf its 0 or missing we can do as we are.\n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-vector-embeddings\nIssue Number: #45\nTime to Complete: 543 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <2 Hours"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-10-27T10:44:53.000Z] [whilefoo]:\nThe goal of this task is to simplify developer experience when setting up the kernel.\r\nTo do this we need to create an interactive CLI tool that will help with setting up the Github App and preparing Cloudflare for deployment of the kernel\r\n\r\nThis setup tool should be inspired by [Probot's setup flow](https://probot.github.io/docs/development/#generating-a-new-app)\r\n\r\n### 1. Setup Cloudflare and Wrangler\r\n- Make the user login with Wrangler\r\n- Create a KV namespace and put the ID in wrangler.toml (we already have a [script](https://github.com/ubiquity-os/ubiquity-os-kernel/blob/development/deploy/setup-kv-namespace.ts) that can be used and/or modified)\r\n\r\n### 2. GitHub App Setup Automation\r\nThis can be done with [Github App Manifest](https://docs.github.com/en/apps/sharing-github-apps/registering-a-github-app-from-a-manifest)\r\n- Automate creation of a GitHub App\r\n- Subscribe to all required GitHub events\r\n- Set necessary permissions for the App\r\n- Convert the private key to PKCS#8\r\n- Populate App ID, private key and webhook secret into `.dev.vars` file and in Cloudflare Worker secrets.\r\n\r\nAdditionally we can make an option in the SDK to disable signature verification in order to ease the development of new plugins.\n\n### Issue Details\nRepository: ubiquity-os/ubiquity-os-kernel\nIssue Number: #171\nTime to Complete: 540 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Week"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-10-28T00:44:32.000Z] [gentlementlegen]:\n              > Not the first time this error pops up, I wonder if it is just OpenAI not returning the proper JSON response or the logic being flawed.\n\n@gentlementlegen You need to implement a fix\n\n_Originally posted by @0x4007 in https://github.com/ubiquity-os/plugins-wishlist/issues/25#issuecomment-2439741668_\n            \n\nIt seems that during some runs the comment length returned by OpenAI does not match the length of the comments that were supposedly parsed.\n\nExample:\nhttps://github.com/ubiquity/work.ubq.fi/issues/164#issuecomment-2482384567\nhttps://github.com/ubiquity-os/plugins-wishlist/issues/25#issuecomment-2439741647\n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-conversation-rewards\nIssue Number: #173\nTime to Complete: 1004 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <2 Hours"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-10-23T07:04:55.000Z] [0x4007]:\nI would like to abstract all of the configured capabilities behind tagging @UbiquityOS. For example, we converted `/ask` to @UbiquityOS so you can more naturally ask a context aware question to your \"AI team member.\" \r\n\r\nI think its useful to retain the `/` syntax, defined within the plugins, for shorthand. However we should have a small and cheap model (like 4o-mini?) that can read the repo's configured help menu, read their descriptions, and then invoke them on behalf of the user query. I think we can optimize costs further without the use of an LLM on a later date, as I don't see costs being a problem for awhile. \r\n\r\n\r\n| Command | Description | Example |\r\n|---|---|---|\r\n| `/help` | List all available commands. | `/help` |\r\n| `/allow` | Allows the user to modify the given label. | `/allow @user1 label` |\r\n| `/query` | Returns the user's wallet, access, and multiplier information. | `/query @ubiquibot` |\r\n| `/start` | Assign yourself to the issue. | `/start` |\r\n| `/stop` | Unassign yourself from the issue. | `/stop` |\r\n| `/wallet` | Register your wallet address for payments. | `/wallet ubq.eth` |\r\n\r\nExamples:\r\n\r\n@ubiquityos can i be assigned to the issue?\r\n@ubiquityos please set my wallet address to 0x0000...\r\n@ubiquityos let @0x4007 set priority labels.[^1^] \r\n\r\nThis could be really nice as we grow the commands set further over time. \r\n\r\n[^1^]: We might need a more detailed description for this to work, or consider another approach like codebase search. \n\n### Issue Details\nRepository: ubiquity-os/ubiquity-os-kernel\nIssue Number: #166\nTime to Complete: 817 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Week"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-08-27T11:43:40.000Z] [gentlementlegen]:\nI believe that the v1 of the bot would automatically assign a user to an issue if that said user would open a pull-request against an issue. Currently this doesn't happen, for example in https://github.com/ubiquibot/command-start-stop/issues/22\r\n\r\nI do not know how this would play with the maximum assigned issues however, if a user would be above the maximum allowed threshold.\n\n### Issue Details\nRepository: ubiquity-os-marketplace/command-start-stop\nIssue Number: #26\nTime to Complete: 314 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Week"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-10-27T11:45:38.000Z] [0x4007]:\n> The acronym is RLHF, which stands for Reinforcement Learning from Human Feedback. This method involves humans guiding the behavior and outputs of the model by providing feedback on its responses, helping it learn desired responses over time.\n\nWe should support three inputs for the model to learn from:\n1. Thumbs up\n2. Thumbs down\n3. Edits\n\nEdits could be useful to compare what the output should be. That way we have a chance to correct some specific mistakes. In the below example it incorrectly writes the `.ubiquity-os.config.yml` name and this could be a good opportunity to teach it. \n\nhttps://github.com/ubiquity-os/ubiquity-os-kernel/issues/111#issuecomment-2439978163\n\n### Issue Details\nRepository: ubiquity-os-marketplace/command-ask\nIssue Number: #18\nTime to Complete: Not completed\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Week"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-08-13T17:57:01.000Z] [gentlementlegen]:\n`.github/.ubiquibot-config.yml` -> `.github/.ubiquity-os.config.yml`\r\n            \r\nThis implied to rename the organization configs (Ubiquity, Ubiquibot), it also implies creating a configuration within the Org @UbiquityOS, and rename eventual overrides within repos. Also should rename the constants in the Kernel.\n\n### Issue Details\nRepository: ubiquity-os/ubiquity-os-kernel\nIssue Number: #83\nTime to Complete: 1670 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Hour"}]}