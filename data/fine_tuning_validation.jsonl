{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-07-02T12:08:59.000Z] [0x4007]:\nThis reminds me that it would be really interesting in the future to support teams. Where I could write on a new task \r\n\r\n```\r\n/start @Keyrxng \r\n```\r\n\r\nAnd we would both be assigned (and be eligible to split the assignee reward.)\r\n\r\nI know a lot of developers work as lone rangers but it could make the experience more collaborative and exciting if we have a massive tasks marketplace and teams hunt projects to co-op on together.\r\n\r\nAlso if I am already assigned to a project and I write the above command, then it will add them as an assignee as well. \n\n### Issue Details\nRepository: ubiquity-os-marketplace/command-start-stop\nIssue Number: #6\nTime to Complete: 3 months\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <4 Hours"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-10-31T23:48:23.000Z] [0x4007]:\nIt works in normal comments, but not in pull request review, which is a separate class of comments\n\n> @UbiquityOS explain the strategy I mentioned \n\n_Originally posted by @0x4007 in https://github.com/ubiquity-os-marketplace/command-ask/pull/28#discussion_r1825277719_\n\n### Issue Details\nRepository: ubiquity-os-marketplace/command-ask\nIssue Number: #29\nTime to Complete: Not completed\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <15 Minutes"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-11-19T16:56:22.000Z] [rndquu]:\nRight now all core plugins have a `manifest.json` file ([example](https://github.com/ubiquity-os-marketplace/command-start-stop/blob/ee4f7c698f0e221381df7c73f56457e1ca4d22ea/manifest.json)) describing plugin's:\r\n- name\r\n- description\r\n- listeners\r\n- command examples\r\n- configuration parameters\r\n\r\nThe issue is that when plugin configuration is displayed in https://github.com/ubiquity-os/ubiquity-os-plugin-installer there're no any configuration parameter descriptions so it's really hard for a partner to find out what parameters are meant to be used for:\r\n<img width=\"1511\" alt=\"Screenshot 2024-11-19 at 19 14 11\" src=\"https://github.com/user-attachments/assets/b2fe50c2-c740-49f8-bec5-2afa1af2f695\">\r\n\r\nWhat should be done for all of the core plugins in https://github.com/ubiquity-os-marketplace:\r\n1. Make sure the readme file is relevant (i.e. has a relevant config example and configuration parameter descriptions)\r\n2. Make sure there's a `name` property in the `manifest.json` (some of the core plugins miss it)\r\n3. Make sure there's a `description` property in the `manifest.json`\r\n4. Add descriptions of plugin configuration parameters in the `plugin-input.ts` file (for example [this](https://github.com/Meniole/command-query-user/blob/042533ebbbfebaf5f5754b1d4a2fcf1d8afd94ad/src/types/plugin-input.ts#L7) code generates [this](https://github.com/Meniole/command-query-user/blob/ecb3c906d0e21b1557b23a8465fb2760b3f87abf/manifest.json#L16) manifest). Simply put we should add the `description` field for all of the plugin parameters in the `plugin-input.ts` file. Description should include general info and possible parameter options.\r\n\r\nNotice that in the `manifest.json` file the `configuration` schema is created dynamically:\r\n1. [update-configuration.yml](https://github.com/ubiquity-os-marketplace/command-start-stop/blob/ee4f7c698f0e221381df7c73f56457e1ca4d22ea/.github/workflows/update-configuration.yml) workflow runs \r\n2. Configuration schema is fetched from [plugin-input.ts](https://github.com/ubiquity-os-marketplace/command-start-stop/blob/ee4f7c698f0e221381df7c73f56457e1ca4d22ea/src/types/plugin-input.ts)\r\n3. [manifest.json](https://github.com/ubiquity-os-marketplace/command-start-stop/blob/ee4f7c698f0e221381df7c73f56457e1ca4d22ea/manifest.json) is updated ([example commit](https://github.com/ubiquity-os-marketplace/command-start-stop/commit/56232c8c67d198cc46cf61c9b3fd0b90cce57df7))\r\n\r\nThen we'll display all configuration parameter descriptions in https://github.com/ubiquity-os/ubiquity-os-plugin-installer on creating/editing a config.\r\n\r\nUpdate: parameter description PRs:\r\n- https://github.com/ubiquity-os-marketplace/text-vector-embeddings/pull/49\r\n- https://github.com/ubiquity-os-marketplace/daemon-pricing/pull/56\r\n- https://github.com/ubiquity-os-marketplace/command-start-stop/pull/94\r\n- https://github.com/ubiquity-os-marketplace/daemon-disqualifier/pull/52\r\n- https://github.com/ubiquity-os-marketplace/command-wallet/pull/24\r\n- https://github.com/ubiquity-os-marketplace/command-query/pull/25\r\n- https://github.com/ubiquity-os-marketplace/command-ask/pull/41\r\n- https://github.com/ubiquity-os-marketplace/text-conversation-rewards/pull/202\r\n- https://github.com/ubiquity-os-marketplace/daemon-merging/pull/30\r\n\r\n\n\n### Issue Details\nRepository: ubiquity-os/ubiquity-os-plugin-installer\nIssue Number: #24\nTime to Complete: 3 months\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <4 Hours"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2025-01-11T08:58:29.000Z] [0x4007]:\nFor a more natural working style for non-software developer contributors, read the contents of posted Google Drive links. We can easily download the contents in plaintext using the Google Drive GUI, I'm sure there is an API for that. \r\n\r\nEnable retrieval support for: \r\n- Docs\r\n- Sheets \r\n- Slides. \r\n\r\nConsider using [Anthropic's Model Context Protocol](https://modelcontextprotocol.io/introduction) if it is applicable. \r\n\r\nReference: https://github.com/ubiquity/business-development/issues/108#issuecomment-2585162798\n\n### Issue Details\nRepository: ubiquity-os-marketplace/command-ask\nIssue Number: #51\nTime to Complete: Not completed\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <4 Hours"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-07-26T03:14:25.000Z] [0x4007]:\nIn a conversation, using the context menu, we are able to instantly create a new issue and prefill the body with the comment contents. It is common that the original author of the comment does not receive credit for creating the issue (when another team member creates the issue for them.)\r\n\r\nDetect when the following string is detected (full example with context):\r\n\r\n```\r\nOriginally posted by @0x4007 in https://github.com/ubiquibot/conversation-rewards/pull/58#discussion_r1691159526\r\n```\r\n\r\nSo it will be a regex like `^Originally posted by @<username regex> in <url regex>$`\r\n\r\nAnd when calculating the rewards, the original author should receive part of the author credit. Make it configurable with a percentage. I would default to 50% of the credit. \n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-conversation-rewards\nIssue Number: #74\nTime to Complete: Not completed\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <2 Hours"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-08-27T11:43:40.000Z] [gentlementlegen]:\nI believe that the v1 of the bot would automatically assign a user to an issue if that said user would open a pull-request against an issue. Currently this doesn't happen, for example in https://github.com/ubiquibot/command-start-stop/issues/22\r\n\r\nI do not know how this would play with the maximum assigned issues however, if a user would be above the maximum allowed threshold.\n\n### Issue Details\nRepository: ubiquity-os-marketplace/command-start-stop\nIssue Number: #26\nTime to Complete: 2 weeks\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Week"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-10-27T11:45:38.000Z] [0x4007]:\n> The acronym is RLHF, which stands for Reinforcement Learning from Human Feedback. This method involves humans guiding the behavior and outputs of the model by providing feedback on its responses, helping it learn desired responses over time.\n\nWe should support three inputs for the model to learn from:\n1. Thumbs up\n2. Thumbs down\n3. Edits\n\nEdits could be useful to compare what the output should be. That way we have a chance to correct some specific mistakes. In the below example it incorrectly writes the `.ubiquity-os.config.yml` name and this could be a good opportunity to teach it. \n\nhttps://github.com/ubiquity-os/ubiquity-os-kernel/issues/111#issuecomment-2439978163\n\n### Issue Details\nRepository: ubiquity-os-marketplace/command-ask\nIssue Number: #18\nTime to Complete: Not completed\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Week"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-07-17T01:53:39.000Z] [gentlementlegen]:\nReview comments seem to be ignored when collecting the result, as seen here:\r\nhttps://github.com/ubiquibot/conversation-rewards/issues/22?notification_referrer_id=NT_kwDOAJWkoLMxMDYzNjkzMzUxMjo5ODA3MDA4#issuecomment-2232171245\r\n\r\nThey should be included for all the users in the final result.\r\n\r\nAnother example of broken data:\r\nhttps://github.com/ubiquity/rpc-handler/issues/23#issuecomment-2235151802\n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-conversation-rewards\nIssue Number: #61\nTime to Complete: 3 months\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <2 Hours"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-07-27T01:05:12.000Z] [gentlementlegen]:\nIn the bot v1, when the configuration is changed, annotations are added to the configuration file if any error is encountered within the configuration. It would be really nice to have for v2 as it is a common scenario to have an invalid configuration and have no feedback about it because the error would only be visible within the worker logs.\r\n\r\nThe main challenge is that only plugins are aware of their configuration shape, so probably the kernel should call every plugin to check their validity, which would require an endpoint or some access to the configuration validators. At the same time, the `manifest.json` validity could be checked, relating to https://github.com/ubiquity/ubiquibot-kernel/issues/78.\r\n\r\nSince this might imply quite a few network requests, we can also consider having this functionality as a separate Worker using [service binding](https://developers.cloudflare.com/workers/runtime-apis/bindings/service-bindings/).\n\n### Issue Details\nRepository: ubiquity-os/ubiquity-os-kernel\nIssue Number: #80\nTime to Complete: 5 months\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Week"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-02-17T14:30:10.000Z] [0x4007]:\nThis should include an updated schema for the UNIX style pipe syntax, as well as the kernel code to support this by pinging remote plugins and then understanding to pipe their output until the end of the chain, then return to kernel. \r\n\r\n> I think it makes more sense to focus on designing a `.yml` config schema that is compatible with \"unix style piping\" so that the kernel knows to pipe output from one plugin to the next just from the `ubiquibot-config.yml` information.\r\n\r\n_Originally posted by @pavlovcik in https://github.com/ubiquity/ubiquibot-kernel/issues/3#issuecomment-1950223872_\r\n            \n\n### Issue Details\nRepository: ubiquity-os/ubiquity-os-kernel\nIssue Number: #24\nTime to Complete: 1 week\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Week"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-11-02T16:25:08.000Z] [Keyrxng]:\nI enjoyed working on the first few AI features when I started contributing but I quickly realized the struggle in obtaining desired outcomes with our intricate use-cases and extended context windows.\r\n\r\nIt's even harder to unit test, or test in the normal sense so validating became pretty hard and so PRs took a long time to merge. Which is why I focused on other areas of the DAO to add value.\r\n\r\nI suggest we finally implement an absolutely unshakeable and beyond reproach benchmarking strategy for our AI features but this spec focuses on `/ask` in particular.\r\n\r\n---\r\n\r\n\r\n**Objective**: Establish a benchmark to evaluate the LLM's factual accuracy and relevance in responses using two primary data sources:\r\n   1. **Static Context**: Fixed linked issues in a benchmark issue, which remain unchanged across tests.\r\n   2. **Dynamic Embeddings**: Embeddings updated with each new comment in the org, affecting similarity-based data retrieval.\r\n\r\n---\r\n\r\n## Core Components\r\n\r\n### 1. Static Context (Linked Issues)\r\n   - **Purpose**: Ensure consistent accuracy in the LLM’s responses using static linked issues within a single benchmark issue.\r\n   - **Method**: Programmatically collect and freeze the linked issues for the benchmark issue. Track how effectively these fixed issues contribute to answering queries.\r\n   - **Evaluation Metric**: Measure response consistency by repeating tests. Responses should remain factually stable, given the fixed nature of the linked issues.\r\n\r\n### 2. Dynamic Embeddings Search\r\n   - **Purpose**: Evaluate the LLM's use of dynamically updated embeddings to retrieve relevant information and factor it into responses.\r\n   - **Aspects to Measure**:\r\n     - **Relevance**: Assess how closely the returned embeddings match the query intent, using cosine similarity thresholds or human evaluation.\r\n     - **Impact on Output**: Track how embeddings modify or enrich the response, especially as new, unrelated comments add potential \"noise.\"\r\n   - **Evaluation Metric**: Compare responses over time to note if relevance or factual accuracy decreases with embedding dilution.\r\n\r\n### 3. Output Effectiveness with Combined Context\r\n   - **Purpose**: Determine the effectiveness of the LLM’s response when combining static context (linked issues) and dynamic embeddings.\r\n   - **Method**: Establish target answers for each test query and evaluate responses against these targets. Track deviations in relevance and factual accuracy.\r\n   - **Evaluation Metric**: Use precision, recall, and human evaluators to score output accuracy and relevance based on combined context.\r\n\r\n---\r\n\r\n## Test Workflow\r\n\r\n1. **Initial Baseline Run**: Execute the benchmark test against the chosen issue, storing the initial output and measuring linked issues' contribution, embedding relevance, and combined context effectiveness.\r\n2. **Recurrent Testing**: With each change (e.g., prompt adjustments, logic changes), re-run the benchmark test, noting any shifts in relevance, accuracy, or response consistency.\r\n\r\n---\r\n\r\n## Deliverables\r\n\r\n1. **Baseline Output and Metrics**: Document the initial output with relevance and accuracy metrics for linked issues, embeddings, and combined context.\r\n2. **Automated Test Script**: Create a script to repeat the test scenario on the benchmark issue and log metrics.\r\n3. **Evaluation Report**: Provide a concise report after each test run to track trends and deviations in LLM performance over time, especially as embeddings evolve.\r\n\r\nThis benchmark framework will allow reliable measurement of the LLM's accuracy and adaptability with respect to static context and dynamic embeddings, enabling consistent future optimizations.\r\n\r\nhttps://chatgpt.com/share/67265190-bec8-8000-ae58-a973a006e3aa\r\n\n\n### Issue Details\nRepository: ubiquity-os-marketplace/command-ask\nIssue Number: #32\nTime to Complete: 2 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Week"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2025-01-08T12:31:47.000Z] [gentlementlegen]:\n```diff\r\n! No answer from OpenAI\r\n\r\n<!--\r\n{\r\n  \"caller\": \"issueCommentCreatedCallback\"\r\n}\r\n-->\r\n```\r\n_Originally posted by @ubiquity-os-beta[bot] in https://github.com/ubiquity-os-marketplace/text-vector-embeddings/issues/67#issuecomment-2577541987_\r\n\r\n\r\n## What happened\r\n\r\nThe `/ask` command failed to run, due to a context being too large, thus failing with\r\n```json\r\n{\r\n       \"res\": {\r\n         \"error\": {\r\n           \"message\": \"Provider returned error\",\r\n           \"code\": 400,\r\n           \"metadata\": {\r\n             \"raw\": \"{\\n  \\\"error\\\": {\\n    \\\"message\\\": \\\"This model's maximum context length has been exceeded. Please reduce the length of the messages.\\\",\\n    \\\"type\\\": \\\"invalid_request_error\\\",\\n    \\\"param\\\": \\\"messages\\\",\\n    \\\"code\\\": \\\"context_length_exceeded\\\"\\n  }\\n}\",\r\n             \"provider_name\": \"OpenAI\"\r\n           }\r\n         },\r\n         \"user_id\": \"user_2njZil2BmAzm3iDZvVsx69KWg4A\"\r\n       },\r\n       \"caller\": \"Completions.createCompletion\"\r\n     }\r\n```\r\n\r\nMultiple problems here:\r\n\r\n- it should use `postComment` so we get the run url and the proper error stack\r\n- there should not be two comments for the failure\r\n- the context should be truncated in some way to allow `/ask` to run properly\r\n\r\n## What was expected\r\n\r\n`/ask` should truncate the context so it runs properly and still gives an accurate answer.\r\n\r\n## How to reproduce\r\n\r\nThe easiest would probably to run `/ask` against the aforementioned issue, or create an issue with a very long content.\n\n### Issue Details\nRepository: ubiquity-os-marketplace/command-ask\nIssue Number: #48\nTime to Complete: 2 weeks\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Day"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-10-14T13:15:42.000Z] [0x4007]:\n- There's situations where we price tasks that actually aren't ready to be worked on due to prerequisite tasks that need to be completed first. \r\n- It could be useful to set the `priority` and `time` level but then use a new command like `/requires <issue url>`\r\n- In this case, the price label can be removed, indicating that it is not ready to be worked on. \r\n- When the prerequisite issue is merged, it would be great to add pricing again, which will automatically allow contributors to `/start` again. \r\n\r\nThis needs to listen to: \r\n1. the issue.closed (as complete) webhook event, and then restore the latest price from the timeline.\r\n2. the issues_comment.created webhook event, to parse the command.\n\n### Issue Details\nRepository: ubiquity-os-marketplace/daemon-pricing\nIssue Number: #43\nTime to Complete: 4 months\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <2 Hours"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-07-31T05:38:11.000Z] [gentlementlegen]:\n> ```diff\r\n> + Evaluating results. Please wait...\r\n> ```\r\n\r\n\r\n@gentlementlegen I noticed that it posted a message \"evaluating results\" but it shouldn't do that work at all when closed as not planned. We should also change the message to something like:\r\n\r\n```diff\r\n# Ineligible for rewards because the issue was closed as not planned.\r\n```\r\n\r\n_Originally posted by @0x4007 in https://github.com/ubiquibot/automated-merging/issues/3#issuecomment-2259706008_\r\n            \n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-conversation-rewards\nIssue Number: #88\nTime to Complete: 3 weeks\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Hour"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2025-02-04T21:41:18.000Z] [shiv810]:\n              > I couldn't find any details about this pull request in the current context. Please provide more information or check the pull request description for a summary of the changes.\n\n@shiv810\n\n```html\n<!-- Ubiquity - ubiquity-os-llm-response - processCommentCallback - undefined\n{\n  \"metadata\": {\n    \"groundTruths\": [\n      \"The repository primarily uses CSS and TypeScript.\",\n      \"It interacts with Ethereum via ethers and Uniswap SDK.\",\n      \"It integrates with GitHub using Octokit libraries.\",\n      \"The project utilizes Supabase as its backend service.\",\n      \"Environment variables are managed with dotenv.\",\n      \"The project is built using esbuild.\",\n      \"Code quality is maintained with eslint and Prettier.\",\n      \"Version control hooks are managed by husky and commitlint.\",\n      \"Testing is performed using Cypress.\",\n      \"YAML is used for configuration files.\"\n    ],\n    \"tokenUsage\": {\n      \"input\": 560,\n      \"output\": 1067,\n      \"total\": 1627\n    }\n  },\n  \"caller\": \"processCommentCallback\"\n}\n-->\n```\n\n_Originally posted by @0x4007 in https://github.com/ubiquity/onboard.ubq.fi/issues/33#issuecomment-2634801162_\n            \n\n### Issue Details\nRepository: ubiquity-os-marketplace/command-ask\nIssue Number: #60\nTime to Complete: 8 hours\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <15 Minutes"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2024-10-27T10:44:53.000Z] [whilefoo]:\nThe goal of this task is to simplify developer experience when setting up the kernel.\r\nTo do this we need to create an interactive CLI tool that will help with setting up the Github App and preparing Cloudflare for deployment of the kernel\r\n\r\nThis setup tool should be inspired by [Probot's setup flow](https://probot.github.io/docs/development/#generating-a-new-app)\r\n\r\n### 1. Setup Cloudflare and Wrangler\r\n- Make the user login with Wrangler\r\n- Create a KV namespace and put the ID in wrangler.toml (we already have a [script](https://github.com/ubiquity-os/ubiquity-os-kernel/blob/development/deploy/setup-kv-namespace.ts) that can be used and/or modified)\r\n\r\n### 2. GitHub App Setup Automation\r\nThis can be done with [Github App Manifest](https://docs.github.com/en/apps/sharing-github-apps/registering-a-github-app-from-a-manifest)\r\n- Automate creation of a GitHub App\r\n- Subscribe to all required GitHub events\r\n- Set necessary permissions for the App\r\n- Convert the private key to PKCS#8\r\n- Populate App ID, private key and webhook secret into `.dev.vars` file and in Cloudflare Worker secrets.\r\n\r\nAdditionally we can make an option in the SDK to disable signature verification in order to ease the development of new plugins.\n\n### Issue Details\nRepository: ubiquity-os/ubiquity-os-kernel\nIssue Number: #171\nTime to Complete: 3 weeks\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <1 Week"}]}
{"messages":[{"role":"system","content":"Given the issue content and actual completion time, assign the most appropriate Time Label.\nConsider the task complexity and actual completion time to select from the available time labels.\nEnsure your selection reflects the real time investment needed for the task."},{"role":"user","content":"### Issue Description\n[2025-02-14T08:43:07.000Z] [0x4007]:\n> $20 for a link and $79 for list items due to the 4x multiplier seems awfully high for me\n\n> @gentlementlegen i wonder if it's a bad idea to exclude specific html tags from priority multiplier. [^04^] [^02^] [^01^] That way, links are always $5 etc. \n\n> Then we have three properties:\n> 1. [^03^] Counting words enabled\n> 2. Reward amount\n> 3. Priority multiplier enabled\n\n> We also should default list item reward to 0.1\n\n_Originally posted by @0x4007 in https://github.com/ubiquity/business-development/issues/109#issuecomment-2658614911_ [^05^]\n\n[^01^]: ⚠ 77% possible duplicate - [Reward Limits](https://www.github.com/ubiquity-os-marketplace/text-conversation-rewards/issues/166#166)\n\n[^02^]: ⚠ 77% possible duplicate - [Rename variables to match the configuration and introduce `elementScore` concept](https://www.github.com/ubiquity-os-marketplace/text-conversation-rewards/issues/92#92)\n\n[^03^]: ⚠ 78% possible duplicate - [Boosting All Rewards Based On Priority](https://www.github.com/ubiquity-os-marketplace/text-conversation-rewards/issues/175#175)\n\n[^04^]: ⚠ 78% possible duplicate - [Crediting for unique links only](https://www.github.com/ubiquity-os-marketplace/text-conversation-rewards/issues/155#155)\n\n[^05^]: ⚠ 79% possible duplicate - [Missing defaults for html tags](https://www.github.com/ubiquity-os-marketplace/text-conversation-rewards/issues/153#153)\n\n\n\n### Issue Details\nRepository: ubiquity-os-marketplace/text-conversation-rewards\nIssue Number: #273\nTime to Complete: Not completed\n\n### Valid Time Labels\nTime: <15 Minutes\nTime: <1 Day\nTime: <1 Week\nTime: <1 Month\nTime: <1 Hour\nTime: <2 Hours\nTime: <4 Hours"},{"role":"assistant","content":"Time: <2 Hours"}]}